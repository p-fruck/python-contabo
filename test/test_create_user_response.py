# coding: utf-8

"""
    Contabo API


    The version of the OpenAPI document: 1.0.0
    Contact: support@contabo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pfruck_contabo.models.create_user_response import CreateUserResponse

class TestCreateUserResponse(unittest.TestCase):
    """CreateUserResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateUserResponse:
        """Test CreateUserResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateUserResponse`
        """
        model = CreateUserResponse()
        if include_optional:
            return CreateUserResponse(
                data = [
                    pfruck_contabo.models.create_user_response_data.CreateUserResponseData(
                        tenant_id = 'DE', 
                        customer_id = '54321', 
                        user_id = '6cdf5968-f9fe-4192-97c2-f349e813c5e8', )
                    ],
                links = pfruck_contabo.models.self_links.SelfLinks(
                    self = '', )
            )
        else:
            return CreateUserResponse(
                data = [
                    pfruck_contabo.models.create_user_response_data.CreateUserResponseData(
                        tenant_id = 'DE', 
                        customer_id = '54321', 
                        user_id = '6cdf5968-f9fe-4192-97c2-f349e813c5e8', )
                    ],
                links = pfruck_contabo.models.self_links.SelfLinks(
                    self = '', ),
        )
        """

    def testCreateUserResponse(self):
        """Test CreateUserResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
